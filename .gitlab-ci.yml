stages:
   - deploy
 
 
production:
  stage: deploy
  script:
     
    # host= host
    # mode= prod, test, dev
    # module_name=
    # project_dir= target directory
    # folder= temporary directory
    # modules= moudules that composer will install (все модули в одну строку, через пробел, как в композере)
    # php= php version 8.0, 7.4
    # composer= composer version 2
    - ansible-playbook ./deploy.yml
      -e host=$TARGET_PROD_GROUP
      -e mode="prod"
      -e ui_version="1.0.0"
      -e module_name="<module-name>"
      -e project_dir="<target-project-directory>"
      -e folder="<dist folder>"
      -e "modules=['colibri/authorization:dev-master','colibri/<module-name>:$CI_COMMIT_REF_NAME']"
      -e "bin_scripts=['<module-name>-migration.sh']"
      -e php=8.0
      -e composer=2
 
  when: manual
  only:
    - tags
  tags:
    - t01
 
test:
  stage: deploy
  script:
 
    # host= host
    # mode= prod, test, dev
    # module_name=
    # project_dir= target directory
    # folder= temporary directory
    # modules= moudules that composer will install (все модули в одну строку, через пробел, как в композере)
    # php= php version 8.0, 7.4
    # composer= composer version 2
    - ansible-playbook ./deploy.yml
      -e host=$TARGET_TEST_GROUP
      -e mode="test"
      -e ui_version="1.0.0"
      -e module_name="<module-name>"
      -e project_dir="<module-name>"
      -e folder="<dist folder>"
      -e "modules=['colibri/authorization:dev-master','colibri/<module-name>:dev-$CI_COMMIT_REF_NAME']"
      -e "bin_scripts=['<module-name>-migration.sh']"
      -e php=8.0
      -e composer=2
 
 
  when: always
  only:
    - dev
  tags:
    - t01